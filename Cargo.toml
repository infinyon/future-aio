[package]
name = "fluvio-future"
version = "0.3.6"
edition = "2018"
authors = ["Fluvio Contributors <team@fluvio.io>"]
description = "I/O futures for Fluvio project"
repository = "https://github.com/infinyon/future-aio"
license = "Apache-2.0"
resolver = "2"

[features]
task = ["async-std/default", "timer", "cfg-if"]
subscriber = ["tracing-subscriber"]
fixture = ["subscriber", "task", "fluvio-test-derive"]
task_unstable = ["task", "async-std/unstable"]
io = ["async-std/default"]
net = ["futures-lite", "async-net", "async-trait", "cfg-if"]
tls = ["rust_tls"]
rust_tls = [
    "net",
    "rustls",
    "webpki",
    "fluvio-async-tls",
    "pin-project",
    "futures-util/io",
]
native2_tls = [
    "net",
    "pin-project",
    "async-native-tls",
    "native-tls",
    "openssl",
    "futures-util/io",
]
openssl_tls = [
    "net",
    "openssl",
    "openssl-sys",
    "pin-project",
    "futures-util/io",
]
timer = ["async-io", "pin-project", "futures-lite"]
fs = ["async-fs", "futures-lite", "pin-utils"]
zero_copy = ["nix", "task_unstable"]
mmap = ["fs", "memmap", "task_unstable"]

[dependencies]
log = "0.4.0"
futures-lite = { version = "1.11.2", optional = true }
futures-util = { version = "0.3.5", optional = true }
futures-timer = { version = "3.0.0", optional = true }
async-fs = { version = "1.3.0", optional = true }
pin-utils = { version = "0.1.0", optional = true }
pin-project = { version = "1.0.1", optional = true }
tracing = { version = "0.1.0" }
tracing-subscriber = { version = "0.2.0", optional = true }
nix = { version = "0.20.0", optional = true }
bytes = { version = "1.0.0", optional = true }
async-trait = { version = "0.1.40", optional = true }
webpki = { version = "0.21", optional = true }
cfg-if = { version = "1.0.0", optional = true }

fluvio-async-tls = { version = "0.2.0", optional = true }
thiserror = "1.0.20"
fluvio-test-derive = { path = "async-test-derive", version = "0.1.1", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-std = { version = "1.6.2", default-features = false, optional = true }
async-io = { version = "1.1.2", optional = true }
async-net = { version = "1.6.0", optional = true }
memmap = { version = "0.7.0", optional = true }
openssl = { version = "0.10.35", optional = true }
async-native-tls = { version = "0.3.3", optional = true }
native-tls = { version = "0.2.4", optional = true }
rustls = { version = "0.19.0", features = ["dangerous_configuration"], optional = true }
openssl-sys = { version = "0.9.65", optional = true, features = ["vendored"]}

[target.'cfg(target_arch = "wasm32")'.dependencies]
fluvio-wasm-timer = "0.2.5"
async-std = { version = "1.6.2", default-features = false, features = ["unstable"], optional = true }
fluvio_ws_stream_wasm = "0.7.0"

[dev-dependencies]
bytes = "1.0.0"
lazy_static = "1.2.0"
num_cpus = "1.10.1"
futures-util = { version = "0.3.5", features = ["sink", "io"] }
async-lock = "2.0.0"
tokio-util = { version = "0.6.4", features = ["codec", "compat"] }
tokio = { version = "1.8.2", features = ["macros"] }
flv-util = { version = "0.5.0", features = ["fixture"] }
fluvio-test-derive = { path = "async-test-derive", version = "0.1.0" }
fluvio-future = { path = ".", features = ["net", "fixture", "timer", "fs"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.24"
wasm-bindgen-futures = "0.4.24"
tracing-wasm = "0.2.0"
